#ifndef CPU_FEATURES_H
#define CPU_FEATURES_H 1

#include <sys/defs.h>
#include <errno.h>
#include <stdint.h>
#include <stdbool.h>

#define CPUID_BASE 0
#define CPUID_MODEL_FEATURES 0x1
#define CPUID_CACHE_V1 0x2
#define CPUID_CACHE_V2 0x4
#define CPUID_MON 0x5
#define CPUID_THERMAL_AND_POWER 0x6
#define CPUID_EXTENDED_FEATURE_FLAGS 0x7
#define CPUID_PERFORMANCE_MONITORING 0xa
#define CPUID_TOPOLOGY 0xb
#define CPUID_XSAVE 0xd
#define CPUID_PT 0x14
#define CPUID_TSC 0x15
#define CPUID_EXT_BASE 0x80000000
#define CPUID_FEATS 0x80000001
#define CPUID_BRAND 0x80000002
#define CPUID_ADDR_WIDTH 0x80000008
#define CPUID_AMD_TOPOLOGY 0x8000001e

struct CpuidLeaf
{
	uint32_t values[4];
};

struct CpuidBit
{
	uint32_t leaf;
	uint8_t word;
	uint8_t bit;
};

#define CPUID_BIT(leaf, word, bit) ((struct CpuidBit){leaf, word, bit})

#define FEATURE_SSE3 CPUID_BIT(CPUID_MODEL_FEATURES, 2, 0)
#define FEATURE_MON CPUID_BIT(CPUID_MODEL_FEATURES, 2, 3)
#define FEATURE_VMX CPUID_BIT(CPUID_MODEL_FEATURES, 2, 5)
#define FEATURE_TM2 CPUID_BIT(CPUID_MODEL_FEATURES, 2, 8)
#define FEATURE_SSSE3 CPUID_BIT(CPUID_MODEL_FEATURES, 2, 9)
#define FEATURE_PDCM CPUID_BIT(CPUID_MODEL_FEATURES, 2, 15)
#define FEATURE_PCID CPUID_BIT(CPUID_MODEL_FEATURES, 2, 17)
#define FEATURE_SSE4_1 CPUID_BIT(CPUID_MODEL_FEATURES, 2, 19)
#define FEATURE_SSE4_2 CPUID_BIT(CPUID_MODEL_FEATURES, 2, 20)
#define FEATURE_X2APIC CPUID_BIT(CPUID_MODEL_FEATURES, 2, 21)
#define FEATURE_TSC_DEADLINE CPUID_BIT(CPUID_MODEL_FEATURES, 2, 24)
#define FEATURE_AESNI CPUID_BIT(CPUID_MODEL_FEATURES, 2, 25)
#define FEATURE_XSAVE CPUID_BIT(CPUID_MODEL_FEATURES, 2, 26)
#define FEATURE_OXSAVE CPUID_BIT(CPUID_MODEL_FEATURES, 2, 27)
#define FEATURE_AVX CPUID_BIT(CPUID_MODEL_FEATURES, 2, 28)
#define FEATURE_RDRAND CPUID_BIT(CPUID_MODEL_FEATURES, 2, 30)
#define FEATURE_HYPERVISOR CPUID_BIT(CPUID_MODEL_FEATURES, 2, 31)
#define FEATURE_FPU CPUID_BIT(CPUID_MODEL_FEATURES, 3, 0)
#define FEATURE_SEP CPUID_BIT(CPUID_MODEL_FEATURES, 3, 11)
#define FEATURE_CLFLUSH CPUID_BIT(CPUID_MODEL_FEATURES, 3, 19)
#define FEATURE_ACPI CPUID_BIT(CPUID_MODEL_FEATURES, 3, 22)
#define FEATURE_MMX CPUID_BIT(CPUID_MODEL_FEATURES, 3, 23)
#define FEATURE_FXSR CPUID_BIT(CPUID_MODEL_FEATURES, 3, 24)
#define FEATURE_SSE CPUID_BIT(CPUID_MODEL_FEATURES, 3, 25)
#define FEATURE_SSE2 CPUID_BIT(CPUID_MODEL_FEATURES, 3, 26)
#define FEATURE_TM CPUID_BIT(CPUID_MODEL_FEATURES, 3, 29)
#define FEATURE_DTS CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 0)
#define FEATURE_TURBO CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 1)
#define FEATURE_PLN CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 4)
#define FEATURE_PTM CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 6)
#define FEATURE_HWP CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 7)
#define FEATURE_HWP_NOT CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 8)
#define FEATURE_HWP_ACT CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 9)
#define FEATURE_HWP_PREF CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 10)
#define FEATURE_TURBO_MAX CPUID_BIT(CPUID_THERMAL_AND_POWER, 0, 14)
#define FEATURE_HW_FEEDBACK CPUID_BIT(CPUID_THERMAL_AND_POWER, 2, 0)
#define FEATURE_PERF_BIAS CPUID_BIT(CPUID_THERMAL_AND_POWER, 2, 3)
#define FEATURE_FSGSBASE CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 0)
#define FEATURE_TSC_ADJUST CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 1)
#define FEATURE_AVX2 CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 5)
#define FEATURE_SMEP CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 7)
#define FEATURE_ERMS CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 9)
#define FEATURE_INVPCID CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 10)
#define FEATURE_AVX512F CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 16)
#define FEATURE_AVX512DQ CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 17)
#define FEATURE_RDSEED CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 18)
#define FEATURE_SMAP CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 20)
#define FEATURE_AVX512IFMA CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 21)
#define FEATURE_CLFLUSHOPT CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 23)
#define FEATURE_CLWB CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 24)
#define FEATURE_PT CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 25)
#define FEATURE_AVX512PF CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 26)
#define FEATURE_AVX512ER CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 27)
#define FEATURE_AVX512CD CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 28)
#define FEATURE_AVX512BW CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 30)
#define FEATURE_AVX512VL CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 1, 31)
#define FEATURE_AVX512VBMI CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 2, 1)
#define FEATURE_UMIP CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 2, 2)
#define FEATURE_PKU CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 2, 3)
#define FEATURE_AVX512VBMI2 CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 2, 6)
#define FEATURE_AVX512VNNI CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 2, 11)
#define FEATURE_AVX512BITALG CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 2, 12)
#define FEATURE_AVX512VPDQ CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 2, 14)
#define FEATURE_AVX512QVNNIW CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 2)
#define FEATURE_AVX512QFMA CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 3)
#define FEATURE_MD_CLEAR CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 10)
#define FEATURE_IBRS_IBPB CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 26)
#define FEATURE_STIBP CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 27)
#define FEATURE_L1D_FLUSH CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 28)
#define FEATURE_ARCH_CAPABILITIES CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 29)
#define FEATURE_SSBD CPUID_BIT(CPUID_EXTENDED_FEATURE_FLAGS, 3, 31)

#define FEATURE_AMD_TOPO CPUID_BIT(CPUID_FEATS, 2, 22)
#define FEATURE_SYSCALL CPUID_BIT(CPUID_FEATS, 3, 11)
#define FEATURE_NX CPUID_BIT(CPUID_FEATS, 3, 20)
#define FEATURE_HUGE_PAGE CPUID_BIT(CPUID_FEATS, 3, 26)
#define FEATURE_RDTSCP CPUID_BIT(CPUID_FEATS, 3, 27)
#define FEATURE_INVLPGB CPUID_BIT(CPUID_ADDR_WIDTH, 1, 3)

#define FEATURE_XSAVEOPT CPUID_BIT(CPUID_XSAVE, 0, 0)
#define FEATURE_XSAVEC CPUID_BIT(CPUID_XSAVE, 0, 1)
#define FEATURE_XSAVES CPUID_BIT(CPUID_XSAVE, 0, 3)

#define MAX_SUPPORTED_CPUID (0x17)
#define MAX_SUPPORTED_CPUID_EXT (0x8000001e)

__CDECLS_BEGIN
error_t read_cpuid(struct CpuidLeaf* __leaf, const uint32_t __leaf_num,
				   const uint32_t __subleaf_num);
bool test_feature(const struct CpuidBit __bit);
__CDECLS_END

#endif // CPU_FEATURES_H